# Template for Hardhat environment variables.

# To use this template, copy this file, rename it .env, and fill in the values. Do not use these mock values when
# deploying your Phat Contract Oracle.

# If not set, we provide default values (check `hardhat.config.ts`) so developers can start prototyping out of the box,
# but we recommend getting your own API Keys for Production Apps.

# To access the values stored in this .env file you can use: process.env.VARIABLENAME
# Polygon mainnet RPC URL
POLYGON_RPC_URL="https://polygon.g.alchemy.com/v2/<API-KEY>"
# Mumbai testnet RPC URL
MUMBAI_RPC_URL="https://polygon-mumbai.g.alchemy.com/v2/<API-KEY>"
# Private key for deployer account
DEPLOYER_PRIVATE_KEY=0x54470b8bcb4329dd926594165409c9a33941ecb37451765d00752faf79ed2a81
# Polygonscan API key for verifying contracts deployed
POLYGONSCAN_API_KEY=DNXJA8RX2Q3VZ4URQIWP7Z68CJXQZSC6AW

# More info can be found in the `README.md`. For Polygon mainnet deployments of the Phala Oracle at https://bricks.phala.network,
# set the `POLYGON_PHALA_ORACLE_ATTESTOR`.
POLYGON_PHALA_ORACLE_ATTESTOR=0x0e9e628d715003ff5045fc92002c67ddab364683
# For Mumbai testnet deployments of the Phala Oracle at https://bricks-poc5.phala.network set the `MUMBAI_PHALA_ORACLE_ATTESTOR`.
MUMBAI_PHALA_ORACLE_ATTESTOR=0xa31cb575847033341a1af63ac86fee33818a4838

# After executing the `yarn main-deploy`, the deployed consumer contract address will be returned
# that address should be set to `POLYGON_CONSUMER_CONTRACT_ADDRESS` for Polygon mainnet deployment
POLYGON_CONSUMER_CONTRACT_ADDRESS=0xad5C96e026D4D00c9a6Fcd1AA2E4958a5155AD03
# After executing the `yarn test-deploy`, the deployed consumer contract address will be returned
# that address should be set to `MUMBAI_CONSUMER_CONTRACT_ADDRESS` for Mumbai testnet deployment
MUMBAI_CONSUMER_CONTRACT_ADDRESS=0x5462964078808abc96f7F45Ff7f3158B819cD7E3

# The encypt passphrase for the exported polkadot wallet JSON file.
# Example Video: https://www.youtube.com/watch?v=z1MR48NYtYc
# If you import your polkadot-account.json file then define POLKADOT_WALLET_ACCOUNT_PASSWORD
POLKADOT_WALLET_ACCOUNT_PASSWORD=
# Else define POLKADOT_WALLET_SURI (ex. POLKADOT_WALLET_SURI=//ALICE or POLKADOT_WALLET_SURI="this is a mnemonic phrase")
POLKADOT_WALLET_SURI="raven valley laugh wait grid typical deny output discover situate bleak scare"

# When calling the yarn update-function, ensure that you set the WORKFLOW_ID to the Phat Contract function workflow you want to update.
WORKFLOW_ID=
